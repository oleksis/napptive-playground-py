name: Docker Scout
# Ref: https://itnext.io/docker-image-scan-github-action-27b2ea322740

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  DOCKER_IMAGE_TAG: ${{ github.ref == 'refs/heads/master' && 'prod-' || 'dev-' }}${{ github.sha }}
  GITHUB_REGISTRY: ghcr.io
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  build:
    name: Push docker images
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Version
        id: version
        run: echo "version=v$(cat version)"  >> $GITHUB_OUTPUT

      - name: Login to GitHub CR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./.devcontainer/Dockerfile.prod
          push: true
          tags: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}

  docker-scout:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      # required for all workflows
      security-events: write
      contents: read
      packages: read
    needs: [build]
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to GitHub CR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GITHUB_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create CVE report
        uses: docker/scout-action@6f8607869b4cfe009275fd1fb87656af9e3c81c2
        with:
          command: cves
          image: ${{ env.GITHUB_REGISTRY }}/${{ env.GITHUB_REPOSITORY }}:${{ env.DOCKER_IMAGE_TAG }}
          args: "--output image.sarif.json --format sarif"
          user: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          registry_user: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: image.sarif.json
